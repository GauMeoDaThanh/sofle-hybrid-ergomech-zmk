/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV 1
#define FUNC 2
#define NUMP 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    //conditional_layers {
    //    compatible = "zmk,conditional-layers";
    //
    //    adjust_layer {
    //        if-layers = <LOWER RAISE>;
    //        then-layer = <ADJUST>;
    //    };
    //};

    behaviors {
        #include "macros.dtsi"

        td_num: tap_dance_num {
            compatible: "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NAV &mo NUMP>;
        }
    };

    combos {
        compatible = "zmk,combos";
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            layers = <0>;
        };
        
        combo_equal {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp EQUAL>;
        };
        
        combo_left_brace {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp LBRC>;
        };
        
        combo_right_brace {
            timeout-ms = <50>;
            key-positions = <27 29>;
            bindings = <&kp RBRC>;
        };
        
        combo_left_bracket {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&kp LBKT>;
        };
        
        combo_right_bracket {
            timeout-ms = <50>;
            key-positions = <39 41>;
            bindings = <&kp RBKT>;
        };
        
        combo_backslash {
            timeout-ms = <50>;
            key-positions = <43 44>;
            bindings = <&kp BSLH>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | SPACE|  NAV   |  |  NAV  | ENTER| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE      &kp N1    &kp N2    &kp N3     &kp N4     &kp N5        &kp N6     &kp N7     &kp N8        &kp N9    &kp N0    &kp MINUS
&kp TAB        &kp Q     &kp W     &kp E      &kp R      &kp T         &kp Y      &kp U      &kp I         &kp O     &kp P     &kp BSPC
&lt FUNC CAPS  &kp A     &kp S     &kp D      &kp F      &kp G         &kp H      &kp J      &kp K         &kp L     &kp SEMI  &kp SQT
&kp LSHFT      &kp Z     &kp X     &kp C      &kp V      &kp B         &kp N      &kp M      &kp COMMA     &kp DOT   &kp FSLH  &kp RSHFT
&kp C_MUTE     &kp LGUI  &kp LALT  &kp LCTRL  &kp SPACE  &td_num       &mo NAV  &kp RET  &kp RCTRL     &kp RALT  &kp RGUI
                                                                    &msc MB1  &msc SCRL_RIGHT  &msc SCRL_UP  &msc SCRL_LEFT  &msc SCRL_DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            label = "nav";

            bindings = <
&studio_unlock  &win_del_desk  &win_ctrl_left  &win_tab         &win_ctrl_right  &win_new_desk        &win_del_desk  &win_ctrl_left  &win_tab   &win_ctrl_right  &win_new_desk   &kc LA(F4) 
&trans          &none          &msc MB1        &msc MOVE_UP     &kp MB2          &kp N5               &kp PG_UP      &prev_word      &kp UP     &next_word       &kp LC(BSPC)    &kp BSPC
&kp LC(Y)       &kp LC(A)      &msc MOVE_LEFT  &msc MOVE_DOWN   &msc MOVE_RIGHT  &kp PRCNT            &kp PG_DN      &kp LEFT        &kp DOWN   &kp RIGHT        &kp DEL         &del_line
&kp LSHFT       &kp LC(Z)      &kp LC(C)       &kp LC(V)        &kp none         &kp RBRC             &kp none       &line_start     &none      &line_end        &none           &trans
&trans          &trans         &trans          &trans           &trans           &trans               &trans         &trans          &trans     &trans           &trans
                                                                                                &msc MB1      &msc MOVE_RIGHT     &msc MOVE_UP      &msc MOVE_LEFT      &msc MOVE_DOWN
            >;

            sensor-bindings = <&inc_dec_kp SCRL_UP SCRL_DOWN &inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            label = "function";

            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5            &kp F6             &kp F7   &kp F8   &kp F9   &kp F10    &kp F11  &kp F12
&none       &none         &none         &none         &none             &none              &none    &none    &none    &none      &none    &none
&trans      &none         &none         &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT         &none    &none    &none    &none      &none    &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4       &none    &none    &none    &none      &none    &none
&trans      &trans        &trans        &trans        &trans            &trans             &trans    &trans    &trans    &trans      &trans
                                                                                        &msc MB1  &msc SCRL_RIGHT  &msc SCRL_UP  &msc SCRL_LEFT  &msc SCRL_DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        numpad_layer {
            label = "numpad";

            bindings = <
&none       &none    &kp KP_NUM    &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS       &none    &kp KP_NUM    &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &none
&none       &none    &kp KP_N7     &kp KP_N8      &kp KP_N9        &kp KP_PLUS        &none    &kp KP_N7     &kp KP_N8      &kp KP_N9        &kp KP_PLUS   &none
&none       &none    &kp KP_N4     &kp KP_N5      &kp KP_N6        &kp KP_CLEAR       &none    &kp KP_N4     &kp KP_N5      &kp KP_N6        &kp KP_CLEAR  &none
&none       &none    &kp KP_N1     &kp KP_N2      &kp KP_N3        &none              &none    &kp KP_N1     &kp KP_N2      &kp KP_N3        &none         &none
&none       &none    &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans             &trans   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &none
                                                                                        &none &none  &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        }
    };
};
